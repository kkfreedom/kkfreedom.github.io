<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>可可积木小屋</title><link>https://kkfreedom.github.io/</link><description>Recent content on 可可积木小屋</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 25 May 2021 12:07:07 +0800</lastBuildDate><atom:link href="https://kkfreedom.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Archlinux DNS故障排查记</title><link>https://kkfreedom.github.io/2021/05/archlinux-dns%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5%E8%AE%B0/</link><pubDate>Tue, 25 May 2021 12:07:07 +0800</pubDate><guid>https://kkfreedom.github.io/2021/05/archlinux-dns%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5%E8%AE%B0/</guid><description>&lt;img src="https://kkfreedom.github.io/2021/05/archlinux-dns%E6%95%85%E9%9A%9C%E6%8E%92%E6%9F%A5%E8%AE%B0/cover.jpg" alt="Featured image of post Archlinux DNS故障排查记" />&lt;h1 id="起因">起因&lt;/h1>
&lt;p>新装的arch没用几天，印象里除了例行的yay -Syu滚动更新以外， 没有做其他的设置。突然某一天，konsole中ping不通google和github了，甚至于baidu也不能ping，奇怪的是，浏览器可以正常访问。&lt;/p>
&lt;h1 id="排查">排查&lt;/h1>
&lt;p>于是开启了漫长的排查和搜索。首先想到的是DNS出问题了，因为konsole中ping IP是能ping通的。接着尝试了以下方法：&lt;/p>
&lt;ul>
&lt;li>手动设置8.8.8.8等DNS服务器到/etc/resolv.conf中。随后发现该文件每次都会被网络托管的NetworkManager覆盖回去。遂再一次修改之后，执行chattr +i /etc/resolv.conf，禁止被修改。-未果&lt;/li>
&lt;li>添加rc.conf文件，手动添加网卡进去interface=eth0 -未果&lt;/li>
&lt;li>在/etc/hosts中添加本地DNS映射 -方向错误，不能解决这次的问题
再尝试以上全部失败后，一次尝试安装一款DNS分析软件过程中，意外的发现连不到任何的镜像服务器。于是开始怀疑是cgproxy配置的全局代理导致的问题。systemctl stop cgproxy 之后终于ping通了baidu。&lt;/li>
&lt;/ul>
&lt;h1 id="解决">解决&lt;/h1>
&lt;p>虽然关掉cgproxy之后可以正常ping了，但是全局代理不能不要哇。再重复阅读Arch安装文档后发现一个关键点：&lt;/p>
&lt;blockquote>
&lt;p>(重要）如果启用了 udp 的透明代理（dns 也是 udp），则给 v2ray 二进制文件加上相应的特权：&lt;code>sudo setcap &amp;quot;cap_net_admin, cap_net_bind_service=ep&amp;quot; /usr/bin/v2ray &lt;/code>
否则 udp 的透明代理可能会出问题。
如果每次更新了 v2ray 二进制文件，都需要重新执行此命令。&lt;/p>
&lt;/blockquote>
&lt;p>重点就是每次更新v2ray二进制文件后都需要重新加特权，重启之后一起恢复正常。&lt;/p>
&lt;h1 id="复盘">复盘&lt;/h1>
&lt;ol>
&lt;li>文档很重要。在后续查看文档之后，了解到v2ray在选中某些配置后（DNS拦截，udp透明代理）会将DNS托管给v2ray内置的DNS服务器。猜测是滚动更新连带更新了v2ray却没有赋权导致内部DNS服务异常。&lt;/li>
&lt;li>遇到问题应该一开始就查看相应的文档，而不是google，网上其他人的解决方案没有详细的上下文，往往并不适用。&lt;/li>
&lt;li>找准方向，一击破之。&lt;/li>
&lt;li>及时快照保存当前稳定的系统。&lt;/li>
&lt;/ol></description></item><item><title>Gradle实操笔记</title><link>https://kkfreedom.github.io/2020/07/gradle%E5%AE%9E%E6%93%8D%E7%AC%94%E8%AE%B0/</link><pubDate>Thu, 09 Jul 2020 00:00:00 +0000</pubDate><guid>https://kkfreedom.github.io/2020/07/gradle%E5%AE%9E%E6%93%8D%E7%AC%94%E8%AE%B0/</guid><description>&lt;img src="https://kkfreedom.github.io/2020/07/gradle%E5%AE%9E%E6%93%8D%E7%AC%94%E8%AE%B0/matt-le-SJSpo9hQf7s-unsplash.jpg" alt="Featured image of post Gradle实操笔记" />&lt;p>Gradle在Java开发中可以作为项目构建工具，相比于Maven，Gradle构建更加快速，没有复杂的xml文件，取而代之的是通过脚本完成诸如依赖管理，项目构建配置，插件配置等功能。
Gradle官网提供了详细的文档，&lt;a class="link" href="https://docs.gradle.org/current/userguide/userguide.html" target="_blank" rel="noopener"
>Gradle Document&lt;/a>，本文记录的是个人在学习以及使用Gradle过程中，使用到的特性以及遇到问题的解决办法。&lt;/p>
&lt;ul>
&lt;li>Gradle project结构
&lt;figure
class="gallery-image"
style="
flex-grow: 72;
flex-basis: 173px"
>
&lt;a href="https://kkfreedom.github.io/2020/07/gradle%E5%AE%9E%E6%93%8D%E7%AC%94%E8%AE%B0/gradle_structure.jpg" data-size="466x643">
&lt;img src="https://kkfreedom.github.io/2020/07/gradle%E5%AE%9E%E6%93%8D%E7%AC%94%E8%AE%B0/gradle_structure.jpg"
width="466"
height="643"
srcset="https://kkfreedom.github.io/2020/07/gradle%E5%AE%9E%E6%93%8D%E7%AC%94%E8%AE%B0/gradle_structure_hue7a4501fa602e51e2237b93e828937b4_60934_480x0_resize_q75_box.jpg 480w, https://kkfreedom.github.io/2020/07/gradle%E5%AE%9E%E6%93%8D%E7%AC%94%E8%AE%B0/gradle_structure_hue7a4501fa602e51e2237b93e828937b4_60934_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="gradle_structure">
&lt;/a>
&lt;figcaption>gradle_structure&lt;/figcaption>
&lt;/figure>&lt;/li>
&lt;li>Gradle常用命令
&lt;ul>
&lt;li>初始化Gradle项目&lt;code>gradle init&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gradle" data-lang="gradle">&lt;span style="display:flex;">&lt;span>$ gradle init
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Select type of project to generate:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f99b15">1&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span> basic
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f99b15">2&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span> application
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f99b15">3&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span> library
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f99b15">4&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span> Gradle plugin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Enter &lt;span style="color:#06b6ef">selection&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#815ba4">default&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span> basic&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">[&lt;/span>&lt;span style="color:#f99b15">1&lt;/span>&lt;span style="color:#5bc4bf">..&lt;/span>&lt;span style="color:#f99b15">4&lt;/span>&lt;span style="color:#5bc4bf">]&lt;/span> &lt;span style="color:#f99b15">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Select implementation language:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f99b15">1&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span> C&lt;span style="color:#5bc4bf">++&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f99b15">2&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span> Groovy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f99b15">3&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span> Java
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f99b15">4&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span> Kotlin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f99b15">5&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span> Scala
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f99b15">6&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span> Swift
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Enter &lt;span style="color:#06b6ef">selection&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#815ba4">default&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span> Java&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">[&lt;/span>&lt;span style="color:#f99b15">1&lt;/span>&lt;span style="color:#5bc4bf">..&lt;/span>&lt;span style="color:#f99b15">6&lt;/span>&lt;span style="color:#5bc4bf">]&lt;/span> &lt;span style="color:#f99b15">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Select build script DSL:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f99b15">1&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span> Groovy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f99b15">2&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span> Kotlin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Enter &lt;span style="color:#06b6ef">selection&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#815ba4">default&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span> Groovy&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">[&lt;/span>&lt;span style="color:#f99b15">1&lt;/span>&lt;span style="color:#5bc4bf">..&lt;/span>&lt;span style="color:#f99b15">2&lt;/span>&lt;span style="color:#5bc4bf">]&lt;/span> &lt;span style="color:#f99b15">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Select test framework:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f99b15">1&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span> JUnit &lt;span style="color:#f99b15">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f99b15">2&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span> TestNG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f99b15">3&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span> Spock
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f99b15">4&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span> JUnit Jupiter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Enter &lt;span style="color:#06b6ef">selection&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#815ba4">default&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span> JUnit &lt;span style="color:#f99b15">4&lt;/span>&lt;span style="color:#5bc4bf">)&lt;/span> &lt;span style="color:#5bc4bf">[&lt;/span>&lt;span style="color:#f99b15">1&lt;/span>&lt;span style="color:#5bc4bf">..&lt;/span>&lt;span style="color:#f99b15">4&lt;/span>&lt;span style="color:#5bc4bf">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Project &lt;span style="color:#06b6ef">name&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#815ba4">default&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span> demo&lt;span style="color:#5bc4bf">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Source &lt;span style="color:#06b6ef">package&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#815ba4">default&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span> demo&lt;span style="color:#5bc4bf">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>BUILD SUCCESSFUL
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f99b15">2&lt;/span> actionable tasks: &lt;span style="color:#f99b15">2&lt;/span> executed
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>构建Gradle项目 &lt;code>gradle build&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果项目中包含了warpper script，更建议使用&lt;code>./gradlew build&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>gradle.properties&lt;/strong> - Gradle运行环境配置
当我们想配置一些本地的环境变量或者针对gradle build做一些配置的时候，可以使用gradle.properties配置文件，下面是一些开发中的例子。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;ul>
&lt;li>本地jdk环境是jdk8, 但是想让Gradle在jdk11环境下编译
在project root下添加gradle.properties文件，增加如下配置
&lt;code>org.gradle.java.home=/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home&lt;/code>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>gradle.properties支持多种配置方式，如果在多个地方均配置有properties文件，优先级如下：&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>system properties, e.g. when -Dgradle.user.home is set on the command line.&lt;/li>
&lt;li>gradle.properties in GRADLE_USER_HOME directory.&lt;/li>
&lt;li>gradle.properties in project root directory.&lt;/li>
&lt;li>gradle.properties in Gradle installation directory.&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>其他的关于build的详细配置，可以参考官网&lt;a class="link" href="https://docs.gradle.org/current/userguide/build_environment.html" target="_blank" rel="noopener"
>Build Enviroment&lt;/a>&lt;/p>
&lt;ul>
&lt;li>build.gradle - 使用Gradle管理依赖&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Gradle可以使用Maven仓库，如果想在项目中优先使用本地仓库，可以在&lt;code>repositories&lt;/code>中加入&lt;code>mavenLocal()&lt;/code>
当需要添加某项依赖时，首先可以去https://search.maven.org/ 或https://mvnrepository.com/检索相应的依赖包，选择想要的版本，然后复制对应的gradle路径即可，以下两种方式是等效的。
&lt;code>implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.0'&lt;/code>
&lt;code>implementation 'org.apache.logging.log4j:log4j-core:2.14.0'&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 258;
flex-basis: 619px"
>
&lt;a href="https://kkfreedom.github.io/2020/07/gradle%E5%AE%9E%E6%93%8D%E7%AC%94%E8%AE%B0/repository.jpg" data-size="1236x479">
&lt;img src="https://kkfreedom.github.io/2020/07/gradle%E5%AE%9E%E6%93%8D%E7%AC%94%E8%AE%B0/repository.jpg"
width="1236"
height="479"
srcset="https://kkfreedom.github.io/2020/07/gradle%E5%AE%9E%E6%93%8D%E7%AC%94%E8%AE%B0/repository_hu90e5932e0acf7350f8e932f46511f01a_101361_480x0_resize_q75_box.jpg 480w, https://kkfreedom.github.io/2020/07/gradle%E5%AE%9E%E6%93%8D%E7%AC%94%E8%AE%B0/repository_hu90e5932e0acf7350f8e932f46511f01a_101361_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="repository.png">
&lt;/a>
&lt;figcaption>repository.png&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;div class="highlight">&lt;div style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>plugins &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id &lt;span style="color:#ef6155">&amp;#39;&lt;/span>org&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">springframework&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">boot&lt;/span>&lt;span style="color:#ef6155">&amp;#39;&lt;/span> version &lt;span style="color:#ef6155">&amp;#39;&lt;/span>2&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">4&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">3&lt;/span>&lt;span style="color:#ef6155">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id &lt;span style="color:#ef6155">&amp;#39;&lt;/span>io&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">spring&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">dependency&lt;/span>&lt;span style="color:#5bc4bf">-&lt;/span>management&lt;span style="color:#ef6155">&amp;#39;&lt;/span> version &lt;span style="color:#ef6155">&amp;#39;&lt;/span>1&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">0&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">11&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">RELEASE&lt;/span>&lt;span style="color:#ef6155">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id &lt;span style="color:#ef6155">&amp;#39;&lt;/span>java&lt;span style="color:#ef6155">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>group &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#ef6155">&amp;#39;&lt;/span>io&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">leo&lt;/span>&lt;span style="color:#ef6155">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>version &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#ef6155">&amp;#39;&lt;/span>0&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">0&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">1&lt;/span>&lt;span style="color:#5bc4bf">-&lt;/span>SNAPSHOT&lt;span style="color:#ef6155">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sourceCompatibility &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#ef6155">&amp;#39;&lt;/span>11&lt;span style="color:#ef6155">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>configurations &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> compileOnly &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> extendsFrom annotationProcessor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>repositories &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mavenLocal&lt;span style="color:#5bc4bf">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mavenCentral&lt;span style="color:#5bc4bf">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dependencies &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> implementation &lt;span style="color:#ef6155">&amp;#39;&lt;/span>org&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">springframework&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">boot&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span>spring&lt;span style="color:#5bc4bf">-&lt;/span>boot&lt;span style="color:#5bc4bf">-&lt;/span>starter&lt;span style="color:#5bc4bf">-&lt;/span>data&lt;span style="color:#5bc4bf">-&lt;/span>jpa&lt;span style="color:#ef6155">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> implementation &lt;span style="color:#ef6155">&amp;#39;&lt;/span>org&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">springframework&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">boot&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span>spring&lt;span style="color:#5bc4bf">-&lt;/span>boot&lt;span style="color:#5bc4bf">-&lt;/span>starter&lt;span style="color:#5bc4bf">-&lt;/span>security&lt;span style="color:#ef6155">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> implementation &lt;span style="color:#ef6155">&amp;#39;&lt;/span>org&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">springframework&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">boot&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span>spring&lt;span style="color:#5bc4bf">-&lt;/span>boot&lt;span style="color:#5bc4bf">-&lt;/span>starter&lt;span style="color:#5bc4bf">-&lt;/span>web&lt;span style="color:#ef6155">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> implementation &lt;span style="color:#ef6155">&amp;#39;&lt;/span>com&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">alibaba&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span>fastjson&lt;span style="color:#5bc4bf">:&lt;/span>1&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">2&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">75&lt;/span>&lt;span style="color:#ef6155">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> implementation group&lt;span style="color:#5bc4bf">:&lt;/span> &lt;span style="color:#ef6155">&amp;#39;&lt;/span>org&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">apache&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">logging&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">log4j&lt;/span>&lt;span style="color:#ef6155">&amp;#39;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> name&lt;span style="color:#5bc4bf">:&lt;/span> &lt;span style="color:#ef6155">&amp;#39;&lt;/span>log4j&lt;span style="color:#5bc4bf">-&lt;/span>core&lt;span style="color:#ef6155">&amp;#39;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> version&lt;span style="color:#5bc4bf">:&lt;/span> &lt;span style="color:#ef6155">&amp;#39;&lt;/span>2&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">14&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">0&lt;/span>&lt;span style="color:#ef6155">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> compileOnly &lt;span style="color:#ef6155">&amp;#39;&lt;/span>org&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">projectlombok&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span>lombok&lt;span style="color:#ef6155">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> developmentOnly &lt;span style="color:#ef6155">&amp;#39;&lt;/span>org&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">springframework&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">boot&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span>spring&lt;span style="color:#5bc4bf">-&lt;/span>boot&lt;span style="color:#5bc4bf">-&lt;/span>devtools&lt;span style="color:#ef6155">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> runtimeOnly &lt;span style="color:#ef6155">&amp;#39;&lt;/span>mysql&lt;span style="color:#5bc4bf">:&lt;/span>mysql&lt;span style="color:#5bc4bf">-&lt;/span>connector&lt;span style="color:#5bc4bf">-&lt;/span>java&lt;span style="color:#ef6155">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> annotationProcessor &lt;span style="color:#ef6155">&amp;#39;&lt;/span>org&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">springframework&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">boot&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span>spring&lt;span style="color:#5bc4bf">-&lt;/span>boot&lt;span style="color:#5bc4bf">-&lt;/span>configuration&lt;span style="color:#5bc4bf">-&lt;/span>processor&lt;span style="color:#ef6155">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> annotationProcessor &lt;span style="color:#ef6155">&amp;#39;&lt;/span>org&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">projectlombok&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span>lombok&lt;span style="color:#ef6155">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> testImplementation &lt;span style="color:#ef6155">&amp;#39;&lt;/span>org&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">springframework&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">boot&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span>spring&lt;span style="color:#5bc4bf">-&lt;/span>boot&lt;span style="color:#5bc4bf">-&lt;/span>starter&lt;span style="color:#5bc4bf">-&lt;/span>test&lt;span style="color:#ef6155">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> testImplementation &lt;span style="color:#ef6155">&amp;#39;&lt;/span>org&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">springframework&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">security&lt;/span>&lt;span style="color:#5bc4bf">:&lt;/span>spring&lt;span style="color:#5bc4bf">-&lt;/span>security&lt;span style="color:#5bc4bf">-&lt;/span>test&lt;span style="color:#ef6155">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> useJUnitPlatform&lt;span style="color:#5bc4bf">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Mockito</title><link>https://kkfreedom.github.io/2020/03/mockito/</link><pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate><guid>https://kkfreedom.github.io/2020/03/mockito/</guid><description>&lt;img src="https://kkfreedom.github.io/2020/03/mockito/pawel-czerwinski-8uZPynIu-rQ-unsplash.jpg" alt="Featured image of post Mockito" />&lt;h1 id="spy-和-mock-的区别">spy 和 mock 的区别&lt;/h1>
&lt;p>简单理解：&lt;/p>
&lt;ul>
&lt;li>spy是partial mock，spy需要初始化，如果不手动初始化，mocktio默认调用&lt;strong>无参构造&lt;/strong>初始化。&lt;/li>
&lt;li>如果Method没有被mock, spy默认调用真实方法，mock不会，对于有返回值的spy返回真实的返回值，mock返回null.&lt;/li>
&lt;li>对于spy，通常建议是用&lt;code>doReturn|Answer|Throw()&lt;/code>方式打桩（stubbing），否则可能由于调用真实的方法而抛异常。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Java" data-lang="Java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#fec418">void&lt;/span> &lt;span style="color:#06b6ef">testSpy&lt;/span>&lt;span style="color:#5bc4bf">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">// another option to spies a real object instead of annotation
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> List&lt;span style="color:#5bc4bf">&amp;lt;&lt;/span>String&lt;span style="color:#5bc4bf">&amp;gt;&lt;/span> list &lt;span style="color:#5bc4bf">=&lt;/span> spy&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#815ba4">new&lt;/span> ArrayList&lt;span style="color:#5bc4bf">&amp;lt;&amp;gt;(&lt;/span>1&lt;span style="color:#5bc4bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">// java.lang.IndexOutOfBoundsException
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#776e71">// when(list.get(0)).thenReturn(&amp;#34;three&amp;#34;);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#776e71">// assertEquals(&amp;#34;three&amp;#34;, list.get(0));
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">// right way to mock
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> doReturn&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;three&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">).&lt;/span>&lt;span style="color:#06b6ef">when&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>list&lt;span style="color:#5bc4bf">).&lt;/span>&lt;span style="color:#06b6ef">get&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>0&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertEquals&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;three&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> list&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">get&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>0&lt;span style="color:#5bc4bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> verify&lt;span style="color:#5bc4bf">(&lt;/span>list&lt;span style="color:#5bc4bf">,&lt;/span> atLeast&lt;span style="color:#5bc4bf">(&lt;/span>1&lt;span style="color:#5bc4bf">)).&lt;/span>&lt;span style="color:#06b6ef">get&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>0&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">// can pass, so spies is actually a copy of real instance
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> assertTrue&lt;span style="color:#5bc4bf">(&lt;/span>list&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">add&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;one&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertEquals&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;three&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> list&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">get&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>0&lt;span style="color:#5bc4bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">out&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">println&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>list&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">size&lt;/span>&lt;span style="color:#5bc4bf">());&lt;/span> &lt;span style="color:#776e71">// 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> list&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">forEach&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>System&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">out&lt;/span>&lt;span style="color:#5bc4bf">::&lt;/span>println&lt;span style="color:#5bc4bf">);&lt;/span> &lt;span style="color:#776e71">// one
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#fec418">void&lt;/span> &lt;span style="color:#06b6ef">testMock&lt;/span>&lt;span style="color:#5bc4bf">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List list &lt;span style="color:#5bc4bf">=&lt;/span> mock&lt;span style="color:#5bc4bf">(&lt;/span>List&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">class&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">// below both work fine
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> when&lt;span style="color:#5bc4bf">(&lt;/span>list&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">get&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>0&lt;span style="color:#5bc4bf">)).&lt;/span>&lt;span style="color:#06b6ef">thenReturn&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;three&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertEquals&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;three&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> list&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">get&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>0&lt;span style="color:#5bc4bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doReturn&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;three&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">).&lt;/span>&lt;span style="color:#06b6ef">when&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>list&lt;span style="color:#5bc4bf">).&lt;/span>&lt;span style="color:#06b6ef">get&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>0&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertEquals&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;three&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> list&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">get&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>0&lt;span style="color:#5bc4bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> list&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">add&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;one&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">// assertTrue(list.add(&amp;#34;one&amp;#34;)); // java.lang.AssertionError
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertEquals&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;three&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> list&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">get&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>0&lt;span style="color:#5bc4bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">out&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">println&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>list&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">size&lt;/span>&lt;span style="color:#5bc4bf">());&lt;/span> &lt;span style="color:#776e71">// 0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> list&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">forEach&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>System&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">out&lt;/span>&lt;span style="color:#5bc4bf">::&lt;/span>println&lt;span style="color:#5bc4bf">);&lt;/span> &lt;span style="color:#776e71">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>但是，&lt;code>doReturn&lt;/code>也有缺陷，&lt;code>doReturn&lt;/code>可以接任意objects，所以是No type safety, &lt;a class="link" href="https://sangsoonam.github.io/2019/02/04/mockito-doreturn-vs-thenreturn.html" target="_blank" rel="noopener"
>参考&lt;/a>&lt;/p>
&lt;h1 id="mock一个object实际上会默认mock所有的方法">Mock一个object实际上会默认mock所有的方法&lt;/h1>
&lt;p>如果方法没有被打桩，有返回值的默认返回null, 返回boolean值的默认返回false，返回int/integer的默认返回0，void方法默认do nothing。&lt;/p>
&lt;p>&lt;a class="link" href="https://www.cnblogs.com/softidea/p/4204389.html" target="_blank" rel="noopener"
>以下例子引用自&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#fec418">void&lt;/span> &lt;span style="color:#06b6ef">spy_Procession_Demo&lt;/span>&lt;span style="color:#5bc4bf">()&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Jack spyJack &lt;span style="color:#5bc4bf">=&lt;/span> spy&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#815ba4">new&lt;/span> Jack&lt;span style="color:#5bc4bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">//使用spy的桩实现实际还是会调用stub的方法，只是返回了stub的值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> when&lt;span style="color:#5bc4bf">(&lt;/span>spyJack&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">go&lt;/span>&lt;span style="color:#5bc4bf">()).&lt;/span>&lt;span style="color:#06b6ef">thenReturn&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#815ba4">false&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span> &lt;span style="color:#776e71">// I say go go go!!
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> assertFalse&lt;span style="color:#5bc4bf">(&lt;/span>spyJack&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">go&lt;/span>&lt;span style="color:#5bc4bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> verify&lt;span style="color:#5bc4bf">(&lt;/span>spyJack&lt;span style="color:#5bc4bf">).&lt;/span>&lt;span style="color:#06b6ef">go&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">//不会调用stub的方法
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> doReturn&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#815ba4">false&lt;/span>&lt;span style="color:#5bc4bf">).&lt;/span>&lt;span style="color:#06b6ef">when&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>spyJack&lt;span style="color:#5bc4bf">).&lt;/span>&lt;span style="color:#06b6ef">go&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertFalse&lt;span style="color:#5bc4bf">(&lt;/span>spyJack&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">go&lt;/span>&lt;span style="color:#5bc4bf">());&lt;/span> &lt;span style="color:#776e71">// nothing print
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#fec418">void&lt;/span> &lt;span style="color:#06b6ef">callRealMethodTest&lt;/span>&lt;span style="color:#5bc4bf">()&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Jerry jerry &lt;span style="color:#5bc4bf">=&lt;/span> mock&lt;span style="color:#5bc4bf">(&lt;/span>Jerry&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">class&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doCallRealMethod&lt;span style="color:#5bc4bf">().&lt;/span>&lt;span style="color:#06b6ef">when&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>jerry&lt;span style="color:#5bc4bf">).&lt;/span>&lt;span style="color:#06b6ef">goHome&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doCallRealMethod&lt;span style="color:#5bc4bf">().&lt;/span>&lt;span style="color:#06b6ef">when&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>jerry&lt;span style="color:#5bc4bf">).&lt;/span>&lt;span style="color:#06b6ef">doSomeThingB&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">// doCallRealMethod().when(jerry).returnInteger();
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jerry&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">goHome&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span> &lt;span style="color:#776e71">// good day
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertEquals&lt;span style="color:#5bc4bf">(&lt;/span>0&lt;span style="color:#5bc4bf">,&lt;/span> jerry&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">returnInteger&lt;/span>&lt;span style="color:#5bc4bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> verify&lt;span style="color:#5bc4bf">(&lt;/span>jerry&lt;span style="color:#5bc4bf">).&lt;/span>&lt;span style="color:#06b6ef">returnInteger&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> verify&lt;span style="color:#5bc4bf">(&lt;/span>jerry&lt;span style="color:#5bc4bf">).&lt;/span>&lt;span style="color:#06b6ef">doSomeThingA&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> verify&lt;span style="color:#5bc4bf">(&lt;/span>jerry&lt;span style="color:#5bc4bf">).&lt;/span>&lt;span style="color:#06b6ef">doSomeThingB&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#815ba4">class&lt;/span> &lt;span style="color:#fec418">Jack&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#fec418">boolean&lt;/span> &lt;span style="color:#06b6ef">go&lt;/span>&lt;span style="color:#5bc4bf">()&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">out&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">println&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;I say go go go!!&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> &lt;span style="color:#815ba4">true&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#815ba4">class&lt;/span> &lt;span style="color:#fec418">Jerry&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#fec418">void&lt;/span> &lt;span style="color:#06b6ef">goHome&lt;/span>&lt;span style="color:#5bc4bf">()&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doSomeThingA&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doSomeThingB&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">// real invoke it.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#fec418">void&lt;/span> &lt;span style="color:#06b6ef">doSomeThingB&lt;/span>&lt;span style="color:#5bc4bf">()&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">out&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">println&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;good day&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">// auto mock method by mockito
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#fec418">void&lt;/span> &lt;span style="color:#06b6ef">doSomeThingA&lt;/span>&lt;span style="color:#5bc4bf">()&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">out&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">println&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;you should not see this message.&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#fec418">int&lt;/span> &lt;span style="color:#06b6ef">returnInteger&lt;/span>&lt;span style="color:#5bc4bf">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> 1&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="doanswer">doAnswer&lt;/h1>
&lt;div class="highlight">&lt;div style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#fec418">void&lt;/span> &lt;span style="color:#06b6ef">testDoAnswer&lt;/span>&lt;span style="color:#5bc4bf">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Jack jack &lt;span style="color:#5bc4bf">=&lt;/span> mock&lt;span style="color:#5bc4bf">(&lt;/span>Jack&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">class&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doAnswer&lt;span style="color:#5bc4bf">((&lt;/span>Answer&lt;span style="color:#5bc4bf">&amp;lt;&lt;/span>String&lt;span style="color:#5bc4bf">&amp;gt;)&lt;/span> inv &lt;span style="color:#5bc4bf">-&amp;gt;&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String name &lt;span style="color:#5bc4bf">=&lt;/span> inv&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getArgument&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>0&lt;span style="color:#5bc4bf">,&lt;/span> String&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">class&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#5bc4bf">+=&lt;/span> &lt;span style="color:#48b685">&amp;#34;_suffix&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> name&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}).&lt;/span>&lt;span style="color:#06b6ef">when&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>jack&lt;span style="color:#5bc4bf">).&lt;/span>&lt;span style="color:#06b6ef">rename&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>anyString&lt;span style="color:#5bc4bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String name &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#48b685">&amp;#34;Leo&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertEquals&lt;span style="color:#5bc4bf">(&lt;/span>name &lt;span style="color:#5bc4bf">+&lt;/span> &lt;span style="color:#48b685">&amp;#34;_suffix&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> jack&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">rename&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>name&lt;span style="color:#5bc4bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#815ba4">class&lt;/span> &lt;span style="color:#fec418">Jack&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">private&lt;/span> String name&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> String &lt;span style="color:#06b6ef">rename&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>String name&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">if&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;Jack&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">equals&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>name&lt;span style="color:#5bc4bf">))&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> &lt;span style="color:#48b685">&amp;#34;Jackson&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> name&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#fec418">boolean&lt;/span> &lt;span style="color:#06b6ef">go&lt;/span>&lt;span style="color:#5bc4bf">()&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">out&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">println&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;I say go go go!!&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> &lt;span style="color:#815ba4">true&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>use spy then test doAnswer, 由以下例子可以看出对于spy()，&lt;code>doAnswer&lt;/code>不会调用真实方法，而&lt;code>thenAnswer&lt;/code>会调用真实方法。&lt;/p>
&lt;div class="highlight">&lt;div style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#fec418">void&lt;/span> &lt;span style="color:#06b6ef">testDoAnswer&lt;/span>&lt;span style="color:#5bc4bf">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Jack jack &lt;span style="color:#5bc4bf">=&lt;/span> spy&lt;span style="color:#5bc4bf">(&lt;/span>Jack&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">class&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doAnswer&lt;span style="color:#5bc4bf">((&lt;/span>Answer&lt;span style="color:#5bc4bf">&amp;lt;&lt;/span>String&lt;span style="color:#5bc4bf">&amp;gt;)&lt;/span> inv &lt;span style="color:#5bc4bf">-&amp;gt;&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String name &lt;span style="color:#5bc4bf">=&lt;/span> inv&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getArgument&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>0&lt;span style="color:#5bc4bf">,&lt;/span> String&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">class&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#5bc4bf">+=&lt;/span> &lt;span style="color:#48b685">&amp;#34;_suffix&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> name&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}).&lt;/span>&lt;span style="color:#06b6ef">when&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>jack&lt;span style="color:#5bc4bf">).&lt;/span>&lt;span style="color:#06b6ef">rename&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>anyString&lt;span style="color:#5bc4bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String name &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#48b685">&amp;#34;Leo&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertEquals&lt;span style="color:#5bc4bf">(&lt;/span>name &lt;span style="color:#5bc4bf">+&lt;/span> &lt;span style="color:#48b685">&amp;#34;_suffix&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> jack&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">rename&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>name&lt;span style="color:#5bc4bf">));&lt;/span> &lt;span style="color:#776e71">// passed but print nothing
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#fec418">void&lt;/span> &lt;span style="color:#06b6ef">testDoAnswer&lt;/span>&lt;span style="color:#5bc4bf">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Jack jack &lt;span style="color:#5bc4bf">=&lt;/span> spy&lt;span style="color:#5bc4bf">(&lt;/span>Jack&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">class&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> when&lt;span style="color:#5bc4bf">(&lt;/span>jack&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">rename&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;Jack&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">)).&lt;/span>&lt;span style="color:#06b6ef">thenAnswer&lt;/span>&lt;span style="color:#5bc4bf">((&lt;/span>Answer&lt;span style="color:#5bc4bf">&amp;lt;&lt;/span>String &lt;span style="color:#5bc4bf">&amp;gt;)&lt;/span> invocation &lt;span style="color:#5bc4bf">-&amp;gt;&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String name &lt;span style="color:#5bc4bf">=&lt;/span> invocation&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getArgument&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>0&lt;span style="color:#5bc4bf">,&lt;/span> String&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">class&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> name &lt;span style="color:#5bc4bf">+&lt;/span> &lt;span style="color:#48b685">&amp;#34;_suffix&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">});&lt;/span> &lt;span style="color:#776e71">// print: real invoke!!
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String name &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#48b685">&amp;#34;Leo&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertEquals&lt;span style="color:#5bc4bf">(&lt;/span>name &lt;span style="color:#5bc4bf">+&lt;/span> &lt;span style="color:#48b685">&amp;#34;_suffix&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> jack&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">rename&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>name&lt;span style="color:#5bc4bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#776e71">// tests failed, print real invoke!! expeced: Leo_suffix Actual: Leo
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#815ba4">class&lt;/span> &lt;span style="color:#fec418">Jack&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">private&lt;/span> String name&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> String &lt;span style="color:#06b6ef">rename&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>String name&lt;span style="color:#5bc4bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">out&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">println&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;real invoke!!&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">if&lt;/span> &lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;Jack&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">equals&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>name&lt;span style="color:#5bc4bf">))&lt;/span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> &lt;span style="color:#48b685">&amp;#34;Jackson&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">return&lt;/span> name&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="argumentcaptor">ArgumentCaptor&lt;/h1>
&lt;p>使用&lt;em>ArgumentCaptor&lt;/em>可以断言方法的参数&lt;/p>
&lt;div class="highlight">&lt;div style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">@Test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#815ba4">public&lt;/span> &lt;span style="color:#fec418">void&lt;/span> &lt;span style="color:#06b6ef">testArgCaptor&lt;/span>&lt;span style="color:#5bc4bf">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Jack jack &lt;span style="color:#5bc4bf">=&lt;/span> mock&lt;span style="color:#5bc4bf">(&lt;/span>Jack&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">class&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ArgumentCaptor&lt;span style="color:#5bc4bf">&amp;lt;&lt;/span>String &lt;span style="color:#5bc4bf">&amp;gt;&lt;/span> argument &lt;span style="color:#5bc4bf">=&lt;/span> ArgumentCaptor&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">forClass&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>String&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">class&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String rename &lt;span style="color:#5bc4bf">=&lt;/span> jack&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">rename&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;Jack&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> verify&lt;span style="color:#5bc4bf">(&lt;/span>jack&lt;span style="color:#5bc4bf">).&lt;/span>&lt;span style="color:#06b6ef">rename&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>argument&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">capture&lt;/span>&lt;span style="color:#5bc4bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertEquals&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;should be Jack&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> &lt;span style="color:#48b685">&amp;#34;Jack&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> argument&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getValue&lt;/span>&lt;span style="color:#5bc4bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#5bc4bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>值得注意的是，通常&lt;em>ArgumentCaptor&lt;/em>使用在verfify中而不是在打桩时候，Mockito官方文档给出的例子是，如果想在打桩时候使用&lt;strong>ArgumentMatcher&lt;/strong>更适合。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> ArgumentCaptor&lt;span style="color:#5bc4bf">&amp;lt;&lt;/span>Person&lt;span style="color:#5bc4bf">&amp;gt;&lt;/span> argument &lt;span style="color:#5bc4bf">=&lt;/span> ArgumentCaptor&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">forClass&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>Person&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">class&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> verify&lt;span style="color:#5bc4bf">(&lt;/span>mock&lt;span style="color:#5bc4bf">).&lt;/span>&lt;span style="color:#06b6ef">doSomething&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>argument&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">capture&lt;/span>&lt;span style="color:#5bc4bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertEquals&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;John&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">,&lt;/span> argument&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getValue&lt;/span>&lt;span style="color:#5bc4bf">().&lt;/span>&lt;span style="color:#06b6ef">getName&lt;/span>&lt;span style="color:#5bc4bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>&lt;strong>Warning:&lt;/strong> it is recommended to use ArgumentCaptor with verification &lt;strong>but not&lt;/strong> with stubbing. Using ArgumentCaptor with stubbing may decrease test readability because captor is created outside of assert (aka verify or &amp;rsquo;then&amp;rsquo;) block. Also it may reduce defect localization because if stubbed method was not called then no argument is captured.
In a way ArgumentCaptor is related to custom argument matchers (see javadoc for &lt;a class="link" href="https://javadoc.io/static/org.mockito/mockito-core/3.7.7/org/mockito/ArgumentMatcher.html" title="interface in org.mockito"
target="_blank" rel="noopener"
>&lt;code>ArgumentMatcher&lt;/code>&lt;/a> class). Both techniques can be used for making sure certain arguments were passed to mocks. However, ArgumentCaptor may be a better fit if:&lt;/p>
&lt;ul>
&lt;li>custom argument matcher is not likely to be reused&lt;/li>
&lt;li>you just need it to assert on argument values to complete verification
Custom argument matchers via &lt;a class="link" href="https://javadoc.io/static/org.mockito/mockito-core/3.7.7/org/mockito/ArgumentMatcher.html" title="interface in org.mockito"
target="_blank" rel="noopener"
>&lt;code>ArgumentMatcher&lt;/code>&lt;/a> are usually better for stubbing.&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>以下引用的例子用来解释为什么打桩时候使用&lt;strong>ArgumentMatcher&lt;/strong>更适合。&lt;/p>
&lt;blockquote>
&lt;p>Assuming the following method to test:
&lt;code>public boolean doSomething(SomeClass arg);&lt;/code>
Mockito documentation says that you should not use captor in this way:
&lt;code>when(someObject.doSomething(argumentCaptor.capture())).thenReturn(true);&lt;/code>
&lt;code> assertThat(argumentCaptor.getValue(), equalTo(expected));&lt;/code>
Because you can just use matcher during stubbing:
&lt;code>when(someObject.doSomething(eq(expected))).thenReturn(true);&lt;/code>&lt;/p>
&lt;/blockquote></description></item><item><title>Java 反射</title><link>https://kkfreedom.github.io/2020/03/java-%E5%8F%8D%E5%B0%84/</link><pubDate>Thu, 05 Mar 2020 00:00:00 +0000</pubDate><guid>https://kkfreedom.github.io/2020/03/java-%E5%8F%8D%E5%B0%84/</guid><description>&lt;img src="https://kkfreedom.github.io/2020/03/java-%E5%8F%8D%E5%B0%84/cover.jpeg" alt="Featured image of post Java 反射" />&lt;h1 id="需求">需求&lt;/h1>
&lt;p>在 Junit 中，有时需要为子类继承自父类的属性赋值，但是父类中的属性没有提供 setter 方法，此时可以使用反射&lt;/p>
&lt;ul>
&lt;li>假设类之间有如下继承关系
&lt;ul>
&lt;li>父类-RequestBase
&lt;ul>
&lt;li>子类-SearchRequest&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>其中父类中 filter 字段未提供 setter 方法，但是在 Junit 中需要为 filter 字段设置值以验证某些场景&lt;/li>
&lt;/ul>
&lt;h1 id="实现">实现&lt;/h1>
&lt;div class="highlight">&lt;div style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#e7e9db;background-color:#2f1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>SearchRequest request &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#815ba4">null&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Class&lt;span style="color:#5bc4bf">&amp;lt;&lt;/span>SearchRequest&lt;span style="color:#5bc4bf">&amp;gt;&lt;/span> clazz &lt;span style="color:#5bc4bf">=&lt;/span> SearchRequest&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">class&lt;/span>&lt;span style="color:#5bc4bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>request &lt;span style="color:#5bc4bf">=&lt;/span> clazz&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">newInstance&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">// 获取父类 class 对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span>Class&lt;span style="color:#5bc4bf">&amp;lt;?&lt;/span> &lt;span style="color:#815ba4">super&lt;/span> SearchRequest&lt;span style="color:#5bc4bf">&amp;gt;&lt;/span> superclass &lt;span style="color:#5bc4bf">=&lt;/span> clazz&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getSuperclass&lt;/span>&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>List&lt;span style="color:#5bc4bf">&amp;lt;&lt;/span>Filter&lt;span style="color:#5bc4bf">&amp;gt;&lt;/span> filterList &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> ArrayList&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filter filter &lt;span style="color:#5bc4bf">=&lt;/span> &lt;span style="color:#815ba4">new&lt;/span> BuyerFilter&lt;span style="color:#5bc4bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filter&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">setPattern&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;*&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filter&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">setType&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;java.lang.String&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filter&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">setSearchFieldName&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>filterList&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">add&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>filter&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">// 反射获取父类字段并赋值给子类对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span>Field buyFilter &lt;span style="color:#5bc4bf">=&lt;/span> superclass&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">getDeclaredField&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;filter&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>buyFilter&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">setAccessible&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#815ba4">true&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>buyFilter&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">set&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>request&lt;span style="color:#5bc4bf">,&lt;/span> buyerFilterList&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">// 子类字段直接赋值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#776e71">&lt;/span>request&lt;span style="color:#5bc4bf">.&lt;/span>&lt;span style="color:#06b6ef">setLocale&lt;/span>&lt;span style="color:#5bc4bf">(&lt;/span>&lt;span style="color:#48b685">&amp;#34;en_US&amp;#34;&lt;/span>&lt;span style="color:#5bc4bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>TCP的三次握手和四次断开</title><link>https://kkfreedom.github.io/2019/09/tcp%E7%9A%84%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%96%AD%E5%BC%80/</link><pubDate>Sun, 08 Sep 2019 00:00:00 +0000</pubDate><guid>https://kkfreedom.github.io/2019/09/tcp%E7%9A%84%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%96%AD%E5%BC%80/</guid><description>&lt;img src="https://kkfreedom.github.io/2019/09/tcp%E7%9A%84%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%96%AD%E5%BC%80/cover.jpg" alt="Featured image of post TCP的三次握手和四次断开" />&lt;p>今天好好的又又又把 tcp 的三次/四次握手学习了一遍，输出一下。&lt;/p>
&lt;h2 id="帮助理解的重要前提">帮助理解的重要前提&lt;/h2>
&lt;p>这个前提就是，tcp 本身是一个面向连接的，全双工的传输层协议。也即 bi-direction or to say full-duplex。&lt;/p>
&lt;h2 id="三次握手">三次握手&lt;/h2>
&lt;p>借用一张网图：
&lt;figure
class="gallery-image"
style="
flex-grow: 159;
flex-basis: 383px"
>
&lt;a href="https://kkfreedom.github.io/2019/09/tcp%E7%9A%84%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%96%AD%E5%BC%80/p1.jpg" data-size="550x344">
&lt;img src="https://kkfreedom.github.io/2019/09/tcp%E7%9A%84%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%96%AD%E5%BC%80/p1.jpg"
width="550"
height="344"
srcset="https://kkfreedom.github.io/2019/09/tcp%E7%9A%84%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%96%AD%E5%BC%80/p1_hu2ff7b7aef8ce52118f1583f1458d8b3b_54751_480x0_resize_q75_box.jpg 480w, https://kkfreedom.github.io/2019/09/tcp%E7%9A%84%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%96%AD%E5%BC%80/p1_hu2ff7b7aef8ce52118f1583f1458d8b3b_54751_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="image">
&lt;/a>
&lt;figcaption>image&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h2 id="四次断开">四次断开&lt;/h2>
&lt;p>再借一张图：
&lt;figure
class="gallery-image"
style="
flex-grow: 134;
flex-basis: 321px"
>
&lt;a href="https://kkfreedom.github.io/2019/09/tcp%E7%9A%84%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%96%AD%E5%BC%80/p2.jpg" data-size="550x410">
&lt;img src="https://kkfreedom.github.io/2019/09/tcp%E7%9A%84%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%96%AD%E5%BC%80/p2.jpg"
width="550"
height="410"
srcset="https://kkfreedom.github.io/2019/09/tcp%E7%9A%84%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%96%AD%E5%BC%80/p2_hu195841c40f4aae19e9188827d97b12bb_47063_480x0_resize_q75_box.jpg 480w, https://kkfreedom.github.io/2019/09/tcp%E7%9A%84%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%96%AD%E5%BC%80/p2_hu195841c40f4aae19e9188827d97b12bb_47063_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="image">
&lt;/a>
&lt;figcaption>image&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h2 id="自己总结">自己总结&lt;/h2>
&lt;p>用自己的白话来讲就是，tcp 不管建立连接还是关闭连接，都有 sync/fin - ack 的过程，从client 和 server 出发来讲都是如此。
之所以建立连接只需要三次，是因为，当 server接到 client 的 sync 请求时，可以同时把 ack 和 sync 合并发送给 client。
而关闭连接需要四次是因为，server 接到 client 的 fin 请求并返回 ack 之后，并不一定要决定此时立刻马上也把自己关掉。
（这里就是前文提到的重要前提，因为 tcp 是全双工的，虽然你 client 不想和我连接了，但是我自己的事情还没处理完，比如server 还没接收完上次的发过来的数据等等），所以这时候&lt;em>&lt;strong>并不一定&lt;/strong>&lt;/em>会立刻返回fin 给 client，于是便有了四次握手。&lt;strong>但是&lt;/strong>，并不一定不代表不会，猜想当 server 在收到 client 发送的 fin 之后发现自己也可以关掉连接了，于是有可能也会在返回 ack 时候同时返回 fin。这时候关闭连接实际上也是三次。
这也是我在 Stack Overflow 上看到有人问为什么 tcp 关闭连接时四次握手而不是三次握手底下看到的最简短的一个答案：It can， and sometimes it does! 😄&lt;/p>
&lt;p>PS: 网图侵删&lt;/p></description></item><item><title>暗时间-读书笔记</title><link>https://kkfreedom.github.io/2019/03/%E6%9A%97%E6%97%B6%E9%97%B4-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</link><pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate><guid>https://kkfreedom.github.io/2019/03/%E6%9A%97%E6%97%B6%E9%97%B4-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</guid><description>&lt;img src="https://kkfreedom.github.io/2019/03/%E6%9A%97%E6%97%B6%E9%97%B4-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/cover.jpeg" alt="Featured image of post 暗时间-读书笔记" />&lt;p>暗时间这本书看起来像是作者本人关于思维、学习、认知的一系列博文的汇总。作者引用了大量的心理学著作或者实验来说明问题，但是全书并没有太多晦涩的知识，读起来还是非常轻松愉悦的。
我读的过程中印象最深的是，作者经常尝试从生理或者说人类大脑进化的角度，来解释人类在思维、专注力、学习方面遇到的一些问题。比如强调人类大脑用于理性思维的半脑和情绪思维的半脑进化时间是很不同的，进而说明我们思维受习惯、情绪支配或者面对问题的「自利归因」，以及经常落入的思维捷径等等，都是因为掌管情绪思维的半脑进化时间更长，更像是我们大脑中的「硬编码」所以在思维中控制力更强。下面是我摘录的部分对我个人很有启发的阐述。希望自己能省视自己，学会理性的思维。&lt;/p>
&lt;p>谈时间利用和专注力：&lt;/p>
&lt;blockquote>
&lt;p>“投入时间”这个说法本身就是荒唐的，实际投入的是时间和效率的乘积”&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>“性格是这样一种自我实现和强化的陷阱：如果你是不容易专注的人，你会发现生活中处处都是分散你注意力的东西，你的思维难以在一个事情上停留半小时，于是你的时间变得琐碎，你很难在一个领域有长久的积累和深入的思考，这样的现实可能会让你感到沮丧，后者让你更加无法专心，这样的现实可能会让你感到焦虑，为了避开焦虑你又会去寻求其他的刺激，结果是恶性循环。”&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>“不管有多纠结，也不要从纠结中逃离，试图推延决定，既然终究是个痛苦的决定，就痛一回，好好思考和调查之后作出一个决定并坚持下去”&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>“我们在记忆的时候将许多线索（例如当时的场景、问题的背景，甚至所处的语言环境、空间位置）一并编码进了记忆，事后能否提取出这段记忆严重取决于提取线索是否丰富、以及在回忆的时候是否重现了记忆时的线索”&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>“我们从大量的经济决策中得到一条适用范围很广的规律——经济决策可以抽象为对投入/回报比例的考量。这是知识获取阶段的抽象；而在问题求解阶段，我们遇到决策问题就可以从投入/回报这个维度上来考量，而不是没头苍蝇一样这边看着想想也对，一忽儿又觉得那个选项看看也对。如果不懂得看到问题的本质（如：经济决策），便很难利用之前推广出来的结论（如：投入/回报，风险估计等等），而是会被我们的原始大脑的一些可预期的非理性所控制（例如从众、从权威、甚至最可怕的行为陷阱——“推迟决策”），成为正常的傻瓜。”&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>“佛家说逆境是增上缘，课本说天降降大任于斯人必先苦其心智劳其筋骨…宗教里说经受磨难才能到达彼岸，说的都是同样的道理”&lt;/p>
&lt;/blockquote>
&lt;p>和我最近的想法有些出入，小时候看刘墉的『寻找一个苦难的天堂』，觉得苦难是步入成功的必要阶段，但是随着年龄的增加，觉得为人应该更有些豁达的态度，怀有一种万事无所谓的勇气。但是这里的描述又让我对磨难对于个人的成功产生困惑了。&lt;/p>
&lt;p>我觉得我可能理解错了所谓的寻找一个苦难的天堂了。
苦难本身并不值得歌颂，就像王小波在沉默的大多数里评价老三届时候说的。只是我们在面对磨难时，应当磨炼自己的意志，拥有豁达的态度，去隐忍、学习来对抗磨难。这样在走过磨难之后才会有成长，而非主动寻求磨难。如果只是陷入在磨难的情绪里，并没有克服它，没有成长。磨难一文不值。&lt;/p>
&lt;p>谈作者自己的学习习惯：&lt;/p>
&lt;blockquote>
&lt;p>“大脑的工作重心就从情绪模块转向了推理模块”&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>“学习一项知识，必须问自己三个重要问题：1. 它的本质是什么。2. 它的第一原则是什么。3. 它的知识结构是怎样的。”&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>“这个自我以强大的情绪力量为动机，以习惯为己任，每时每刻都驱使着我们的行为。因为它掌握了“情绪”这个武器，所以我们只能时时拿它当大爷。不记得是哪位哲学家说的了，理性是感性的奴隶。那么，是不是就是说无法克服既有习惯了？以我的经验（以及观察到的别人的经验），还是可以的。第一条就是认识到习惯的改变绝不是一天两天的事情，承认它的难度。第二条就是如果你真想改掉习惯，就需要在过程中常常注意观察自己的行为，否则习惯会以一种你根本觉察不到的方式左右你的行为让你功亏一篑。有一个认知技巧也许可以缓解更改习惯过程中的不适：即把居住在内心的那个非理性自我当成你自己的孩子（你要去培养他），或者你的对手（你要去打败他）也行。总之不能当成自己，因为每个人都不想改变自己。”&lt;/p>
&lt;/blockquote>
&lt;p>这里有点像佛法所说的观察自己内心了。&lt;/p>
&lt;p>谈时间管理：&lt;/p>
&lt;blockquote>
&lt;p>“博客文章对我来说是学习和思考的副产品，我并不为写文章而写文章”
谈去除杂项：&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>“而实际上，关上一扇门，有时能够增大收益期望”&lt;/p>
&lt;/blockquote>
&lt;p>谈知识结构：&lt;/p>
&lt;blockquote>
&lt;p>“出现是为了解决什么问题），是怎么解决的，自身又引入了哪些新的问题，从而适用哪些场景”&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>“此外你还必须了解它的traps和pitfalls（缺陷和陷阱，如果不知道陷阱的存在，掉进去也不知道怎么掉的。）这些都是essential knowledge”&lt;/p>
&lt;/blockquote>
&lt;p>对于编程来说，学习一个新的知识（框架、语言）时，还要了解他的缺陷。&lt;/p>
&lt;blockquote>
&lt;p>“注意，熟悉并非指熟悉所有细节，而是那些重要的，或者无法在需要用到的时候按需查找的知识。比如上面提到的：适用场景不适用场景，编程范式，主要语言特性，缺陷和陷阱。”&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>“该知识的（体系或层次）结构是什么、本质是什么、第一原则是什么。”&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>“学习一个小领域的时候，时时把“最终能够写出一篇漂亮的Survey”放在大脑中提醒自己，就能有助于在阅读和实践的时候有意无意地整理知识的结构、本质和重点，经过整理之后的知识理解更深刻，更不容易忘记，更容易被提取。”&lt;/p>
&lt;/blockquote>
&lt;p>输出的重要性&lt;/p>
&lt;p>谈个人经历（其实也是讲自己思维的变化）：&lt;/p>
&lt;blockquote>
&lt;p>“但事前真的很难判断哪条路是最优的，我们能做到的，是把一条路走透了、走深了，只要不是一条太不靠谱的路，深入的过程中总会有很多的收获。只要不是太顽固，善于反省，总有一天也会逐渐意识到越来越靠谱的路。”&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>“如果觉得做不下去了，就硬着头皮坚持做，然后就类似于麻木了，适应了，那种望而却步的感觉会逐渐自动退去。惊人的简单，但事实就是如此，硬着头皮，过了那个情绪上最艰难的时候，也就适应了。”&lt;/p>
&lt;/blockquote>
&lt;p>谈思维的惯性（逃出思维的肖申克）：&lt;/p>
&lt;blockquote>
&lt;p>“我自己就有这样的体会，我在学习专业知识的时候经常使用 Google ，遇到知识性问题第一反应就是上 Google ，或者上 Wikipedia 。然而，在实际生活当中遇到一些生活问题的时候，往往第一时间想到的却不是 Google ，而是之前解决生活问题的时候建立起来的习惯（比如询问身边的朋友，或者干脆放一边不管）（虽然我曾经总结并告诉自己说“遇到任何知识性问题，第一时间问 Google ”），怎么会这样呢？生活问题难道不也是问题？难道不也应该联想到对待专业问题的方法——Google 之吗？可是我们的记忆系统的特点决定了不是这样的，生活问题就是生活问题，大脑会第一时间将我们之前怎样解决生活问题的方式提取出来，这个优先级要远远高于一个更一般的策略——Google，只有当没有特定策略的时候，大脑才会退而求其次寻求一般性策略。还有更生动的：有一次在豆瓣上看到某人[…]”&lt;/p>
&lt;/blockquote>
&lt;p>这两个例子在说习惯的力量。思维特点决定了我们通常会受到习惯性思维的控制，然而习惯性的思维（或者说基于习惯积累的思维）并不一定是最优解。要学会意识到哪些思维是基于习惯的，哪些是基于理性的更好的思维。&lt;/p>
&lt;blockquote>
&lt;p>“除了多多反省观察自己之外，在面对问题的时候多抽象其本质也是一个有力的办法”&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>“认知失调与自我辩护。如果我们在听到别人的道理之前已经有了一个心理上的倾向，那么即便别人给出一个有一定说服力的理由，根据认知失调理论，我们也会竭力为自己辩护；又由于世界是复杂的，所以我们几乎总是能够找到辩护的借口——“上次报纸上说一个英国老太太每天必吸一支烟，活了一百多岁呢。”&lt;/p>
&lt;/blockquote>
&lt;p>摈弃先入为主的思维陷阱，避免自我辩解。学会客观看待自己！&lt;/p>
&lt;blockquote>
&lt;p>“前提是我们必须首先了解自身”&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>“对付我们强大的习惯的最佳办法是将自己认为正确的（不管是自己经过困难或失败而领悟的，还是看到书上或听到别人说的）写下来，并常常拿出来翻看”&lt;/p>
&lt;/blockquote></description></item></channel></rss>